{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "next/core-web-vitals",
    "airbnb",
    "airbnb/hooks",
    "airbnb-typescript",
    "prettier"
  ],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["tsconfig.json"]
  },
  "plugins": ["react", "@typescript-eslint"],
  "rules": {
    "no-unused-vars": ["off"], // 사용하지 않는 변수 선언 가능
    "no-use-before-define": "off", // 변수가 선언문보다 더 위에 있어도 사용 가능
    "prefer-arrow-callback": "error", // 콜백 함수는 반드시 화살표 함수로 작성
    "prefer-template": "off", // 문자열을 문자열 연결 연산자(+)로 연결 가능
    "require-await": "error", // 내부에 await 표현식 없이 async를 사용할 수 없음,
    "@typescript-eslint/no-var-requires": "off",
    "import/extensions": "off", // import 할 때 파일 확장자 작성하지 않아도 됨
    "@typescript-eslint/no-use-before-define": "off",
    "import/no-extraneous-dependencies": "off", // package.json에 명시되지 않은 외부 모듈 import 가능
    "import/prefer-default-export": "off", // 모듈에 export를 한 번만 사용해도 default export를 하지 않아도 됨
    "jsx-a11y/click-events-have-key-events": ["off"], // onKeyDown, onKeyUp, onKeyPress 없이 onClick을 사용해도 됨
    "jsx-a11y/control-has-associated-label": ["off"], // button 등의 interactive element를 텍스트 라벨 없이 사용할 수 있음
    "jsx-a11y/no-static-element-interactions": ["off"], // span,div 등의 non-interactive element를 role 없이 사용할 수 있음
    "jsx-a11y/label-has-associated-control": ["off"], // label과 input을 연관시키지(htmlFor - id) 않아도 됨
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx", ".ts", ".tsx"] }], // jsx 파일 확장자 제한
    "react/jsx-no-useless-fragment": ["off"], // 무의미한(자식 요소가 1개 또는 fragment가 html의 자식인 경우) fragment 사용 가능
    "react/react-in-jsx-scope": "off", // jsx를 사용하기 위해 반드시 React를 import 하지 않아도 됨
    "react/require-default-props": "off", // defaultProps를 지정하지 않아도 됨
    "react/prop-types": ["off"], // propTypes 설정하지 않아도 됨
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function"
      }
    ],
    "arrow-body-style": ["error", "always"],
    "react/jsx-props-no-spreading" : [0]
  }
}
